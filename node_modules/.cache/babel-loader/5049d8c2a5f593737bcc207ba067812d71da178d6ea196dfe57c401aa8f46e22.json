{"ast":null,"code":"var _jsxFileName = \"/Users/siriyalachandu/Documents/GitHub/Event-Task-Scheduler/src/component/Alert/index.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import './index.css'\n\n// const Alert=(props)=>{\n//     const {data}=props\n//     const {message,date}=data\n\n// const endTime=new Date(date).getTime();\n// const [currentTime,setCurrentTime]=useState(new Date().getTime())\n// const gap=endTime-currentTime\n\n// const seconds=1000;\n// const minutes=seconds * 60;\n// const hours=minutes * 60;\n// const days=hours * 24;\n\n// const remainingDays=Math.floor(gap / days)\n// const remainingHours=Math.floor((gap % days) / hours)\n// const remainingMinutes=Math.floor((gap % hours) / minutes)\n// const remainingSeconds=Math.floor((gap % minutes) / seconds)\n\n// useEffect(()=>{\n//     setTimeout(()=>setCurrentTime(new Date().getTime()),1000)\n// },[currentTime])\n\n// return(\n\n//         <div className=\"alert\">\n//             <div className=\"card\">\n//                 <div className=\"card-content\">\n//                     <p className=\"card-title\">{remainingDays}: {remainingHours}: {remainingMinutes}: {remainingSeconds}</p>\n//                     <p className=\"card-para\">{message}</p>\n//                     <p>{date}</p>\n//                 </div>\n//             </div>\n\n//         </div>\n//         )\n//     }\n\n// export default Alert\n\nimport React, { useEffect, useState } from \"react\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = props => {\n  _s();\n  const {\n    data\n  } = props;\n  const {\n    message,\n    date\n  } = data;\n  const endTime = new Date(date).getTime();\n  const [currentTime, setCurrentTime] = useState(new Date().getTime());\n  const gap = endTime - currentTime;\n  const seconds = 1000;\n  const minutes = seconds * 60;\n  const hours = minutes * 60;\n  const days = hours * 24;\n  const remainingDays = Math.floor(gap / days);\n  const remainingHours = Math.floor(gap % days / hours);\n  const remainingMinutes = Math.floor(gap % hours / minutes);\n  const remainingSeconds = Math.floor(gap % minutes / seconds);\n  useEffect(() => {\n    const timer = setTimeout(() => setCurrentTime(new Date().getTime()), 1000);\n    return () => clearTimeout(timer);\n  }, [currentTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title\",\n          children: [remainingDays, \"d : \", remainingHours, \"h : \", remainingMinutes, \"m : \", remainingSeconds, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-para\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Alert, \"qBcQk4RpRSoEa8O4IazGCGBh2M4=\");\n_c = Alert;\nexport default Alert;\nvar _c;\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Alert","props","_s","data","message","date","endTime","Date","getTime","currentTime","setCurrentTime","gap","seconds","minutes","hours","days","remainingDays","Math","floor","remainingHours","remainingMinutes","remainingSeconds","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siriyalachandu/Documents/GitHub/Event-Task-Scheduler/src/component/Alert/index.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import './index.css'\r\n\r\n// const Alert=(props)=>{\r\n//     const {data}=props\r\n//     const {message,date}=data\r\n\r\n// const endTime=new Date(date).getTime();\r\n// const [currentTime,setCurrentTime]=useState(new Date().getTime())\r\n// const gap=endTime-currentTime\r\n\r\n\r\n// const seconds=1000;\r\n// const minutes=seconds * 60;\r\n// const hours=minutes * 60;\r\n// const days=hours * 24;\r\n\r\n\r\n// const remainingDays=Math.floor(gap / days)\r\n// const remainingHours=Math.floor((gap % days) / hours)\r\n// const remainingMinutes=Math.floor((gap % hours) / minutes)\r\n// const remainingSeconds=Math.floor((gap % minutes) / seconds)\r\n\r\n\r\n\r\n// useEffect(()=>{\r\n//     setTimeout(()=>setCurrentTime(new Date().getTime()),1000)\r\n// },[currentTime])\r\n\r\n// return(\r\n\r\n//         <div className=\"alert\">\r\n//             <div className=\"card\">\r\n//                 <div className=\"card-content\">\r\n//                     <p className=\"card-title\">{remainingDays}: {remainingHours}: {remainingMinutes}: {remainingSeconds}</p>\r\n//                     <p className=\"card-para\">{message}</p>\r\n//                     <p>{date}</p>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         </div>\r\n//         )\r\n//     }\r\n\r\n\r\n// export default Alert\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './index.css';\r\n\r\nconst Alert = (props) => {\r\n    const { data } = props;\r\n    const { message, date } = data;\r\n\r\n    const endTime = new Date(date).getTime();\r\n    const [currentTime, setCurrentTime] = useState(new Date().getTime());\r\n    const gap = endTime - currentTime;\r\n\r\n    const seconds = 1000;\r\n    const minutes = seconds * 60;\r\n    const hours = minutes * 60;\r\n    const days = hours * 24;\r\n\r\n    const remainingDays = Math.floor(gap / days);\r\n    const remainingHours = Math.floor((gap % days) / hours);\r\n    const remainingMinutes = Math.floor((gap % hours) / minutes);\r\n    const remainingSeconds = Math.floor((gap % minutes) / seconds);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setCurrentTime(new Date().getTime()), 1000);\r\n        return () => clearTimeout(timer);\r\n    }, [currentTime]);\r\n\r\n    return (\r\n        <div className=\"alert\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <p className=\"card-title\">{remainingDays}d : {remainingHours}h : {remainingMinutes}m : {remainingSeconds}s</p>\r\n                    <p className=\"card-para\">{message}</p>\r\n                    <p>{date}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}