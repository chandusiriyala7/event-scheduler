{"ast":null,"code":"var _jsxFileName = \"/Users/siriyalachandu/Documents/GitHub/Event-Task-Scheduler/src/component/remainders/index.js\";\n// import React, { Component } from \"react\";\n// import Alert from \"../Alert\";\n// import {v4 as uuidv4} from 'uuid';\n// import './index.css'\n\n// class Remainder extends Component{\n\n//     state={\n//     remainderList:[],\n//     message:\"\",\n//     date:null,\n//     id:null,\n//     time:null,\n//     }\n\n//     text=(event)=>{\n//           this.setState({message:event.target.value})\n//     }\n\n//     componentDidMount() {\n//         const parsedList = JSON.parse(localStorage.getItem(\"TaskList\"));\n//         if (parsedList) {\n//             this.setState({ remainderList: parsedList });\n//         }\n//     }\n\n//     DumpToLocal = (taskArray) => {\n//         localStorage.setItem(\"AlertList\", JSON.stringify(taskArray));\n//     };\n\n//     getDate=(event)=>{\n//         this.setState({date:event.target.value})\n//     }\n\n//     getTime=(event)=>{\n//         this.setState({time:event.target.value})\n//     }\n\n//     makeMessage=()=>{\n//         const {message,remainderList,date,time}=this.state\n\n//         const remaind={\n//            id:uuidv4(),\n//            message,\n//            date,\n//            time,\n//         }\n\n//         this.setState(Prev=>({\n//             remainderList:[...Prev.remainderList,remaind]\n//         }))\n\n//         const updatedAlerts=[...remainderList,remaind]\n\n//         this.DumpToLocal(updatedAlerts)\n//         this.setState({message:\"\",date:null})\n//     }\n\n//     render(){\n//         const {message,remainderList}=this.state\n//         return(\n//           <div className=\"remainder-container\">\n//             <div className=\"input-container\">\n//                 <input type=\"text\" placeholder=\"Enter Message\" onChange={this.text} className=\"input-field\" value={message}/>\n//                 <input type=\"date\" className=\"date\" onChange={this.getDate} />\n//                 <input type=\"time\" onChange={this.getTime} />\n//                     <button  className=\"notify-btn\" type=\"button\" onClick={this.makeMessage} >\n\n//                     <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\"></path>\n//                     </svg>\n\n//                     <div className=\"text\">\n//                     Add\n//                     </div>\n\n//                     </button>\n//             </div>\n\n//             <div className=\"Alerts-container\">\n//                 {\n//                     remainderList.map(each=>(\n//                         <Alert data={each} key={each.id}/>\n//                     ))\n//                 }\n//             </div>\n\n//           </div>\n//         )\n//     }\n// }\n\n// export default Remainder\n\nimport React, { Component } from \"react\";\nimport Alert from \"../Alert\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Remainder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      remainderList: [],\n      message: \"\",\n      date: \"\",\n      time: \"\"\n    };\n    this.DumpToLocal = taskArray => {\n      localStorage.setItem(\"AlertList\", JSON.stringify(taskArray));\n    };\n    this.text = event => {\n      this.setState({\n        message: event.target.value\n      });\n    };\n    this.getDate = event => {\n      this.setState({\n        date: event.target.value\n      });\n    };\n    this.getTime = event => {\n      this.setState({\n        time: event.target.value\n      });\n    };\n    this.makeMessage = () => {\n      const {\n        message,\n        remainderList,\n        date,\n        time\n      } = this.state;\n      const dateTime = `${date}T${time}`;\n      const remaind = {\n        id: uuidv4(),\n        message,\n        date: dateTime\n      };\n      const updatedAlerts = [...remainderList, remaind];\n      this.setState({\n        remainderList: updatedAlerts,\n        message: \"\",\n        date: \"\",\n        time: \"\"\n      });\n      this.DumpToLocal(updatedAlerts);\n    };\n  }\n  componentDidMount() {\n    const parsedList = JSON.parse(localStorage.getItem(\"AlertList\"));\n    if (parsedList) {\n      this.setState({\n        remainderList: parsedList\n      });\n    }\n  }\n  render() {\n    const {\n      message,\n      remainderList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remainder-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Message\",\n          onChange: this.text,\n          className: \"input-field\",\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"date\",\n          onChange: this.getDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          onChange: this.getTime,\n          className: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notify-btn\",\n          type: \"button\",\n          onClick: this.makeMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: \"1.5\",\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alerts-container\",\n        children: remainderList.map(each => /*#__PURE__*/_jsxDEV(Alert, {\n          data: each\n        }, each.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Remainder;","map":{"version":3,"names":["React","Component","Alert","v4","uuidv4","jsxDEV","_jsxDEV","Remainder","constructor","args","state","remainderList","message","date","time","DumpToLocal","taskArray","localStorage","setItem","JSON","stringify","text","event","setState","target","value","getDate","getTime","makeMessage","dateTime","remaind","id","updatedAlerts","componentDidMount","parsedList","parse","getItem","render","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","map","each","data"],"sources":["/Users/siriyalachandu/Documents/GitHub/Event-Task-Scheduler/src/component/remainders/index.js"],"sourcesContent":["// import React, { Component } from \"react\";\r\n// import Alert from \"../Alert\";\r\n// import {v4 as uuidv4} from 'uuid';\r\n// import './index.css'\r\n\r\n// class Remainder extends Component{\r\n\r\n//     state={\r\n//     remainderList:[],\r\n//     message:\"\",\r\n//     date:null,\r\n//     id:null,\r\n//     time:null,\r\n//     }\r\n\r\n//     text=(event)=>{\r\n//           this.setState({message:event.target.value})\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         const parsedList = JSON.parse(localStorage.getItem(\"TaskList\"));\r\n//         if (parsedList) {\r\n//             this.setState({ remainderList: parsedList });\r\n//         }\r\n//     }\r\n\r\n//     DumpToLocal = (taskArray) => {\r\n//         localStorage.setItem(\"AlertList\", JSON.stringify(taskArray));\r\n//     };\r\n\r\n//     getDate=(event)=>{\r\n//         this.setState({date:event.target.value})\r\n//     }\r\n\r\n//     getTime=(event)=>{\r\n//         this.setState({time:event.target.value})\r\n//     }\r\n\r\n//     makeMessage=()=>{\r\n//         const {message,remainderList,date,time}=this.state\r\n\r\n//         const remaind={\r\n//            id:uuidv4(),\r\n//            message,\r\n//            date,\r\n//            time,\r\n//         }\r\n\r\n//         this.setState(Prev=>({\r\n//             remainderList:[...Prev.remainderList,remaind]\r\n//         }))\r\n\r\n//         const updatedAlerts=[...remainderList,remaind]\r\n\r\n//         this.DumpToLocal(updatedAlerts)\r\n//         this.setState({message:\"\",date:null})\r\n//     }\r\n\r\n    \r\n\r\n//     render(){\r\n//         const {message,remainderList}=this.state\r\n//         return(\r\n//           <div className=\"remainder-container\">\r\n//             <div className=\"input-container\">\r\n//                 <input type=\"text\" placeholder=\"Enter Message\" onChange={this.text} className=\"input-field\" value={message}/>\r\n//                 <input type=\"date\" className=\"date\" onChange={this.getDate} />\r\n//                 <input type=\"time\" onChange={this.getTime} />\r\n//                     <button  className=\"notify-btn\" type=\"button\" onClick={this.makeMessage} >\r\n\r\n                    \r\n\r\n//                     <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\r\n//                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\"></path>\r\n//                     </svg>\r\n\r\n\r\n//                     <div className=\"text\">\r\n//                     Add\r\n//                     </div>\r\n\r\n//                     </button>\r\n//             </div>\r\n            \r\n\r\n//             <div className=\"Alerts-container\">\r\n//                 {\r\n//                     remainderList.map(each=>(\r\n//                         <Alert data={each} key={each.id}/>\r\n//                     ))\r\n//                 }\r\n//             </div>\r\n            \r\n//           </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Remainder\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport Alert from \"../Alert\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport './index.css';\r\n\r\nclass Remainder extends Component {\r\n    state = {\r\n        remainderList: [],\r\n        message: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        const parsedList = JSON.parse(localStorage.getItem(\"AlertList\"));\r\n        if (parsedList) {\r\n            this.setState({ remainderList: parsedList });\r\n        }\r\n    }\r\n\r\n    DumpToLocal = (taskArray) => {\r\n        localStorage.setItem(\"AlertList\", JSON.stringify(taskArray));\r\n    };\r\n\r\n    text = (event) => {\r\n        this.setState({ message: event.target.value });\r\n    };\r\n\r\n    getDate = (event) => {\r\n        this.setState({ date: event.target.value });\r\n    };\r\n\r\n    getTime = (event) => {\r\n        this.setState({ time: event.target.value });\r\n    };\r\n\r\n    makeMessage = () => {\r\n        const { message, remainderList, date, time } = this.state;\r\n        const dateTime = `${date}T${time}`;\r\n        \r\n        const remaind = {\r\n            id: uuidv4(),\r\n            message,\r\n            date: dateTime,\r\n        };\r\n\r\n        const updatedAlerts = [...remainderList, remaind];\r\n\r\n        this.setState({\r\n            remainderList: updatedAlerts,\r\n            message: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n        });\r\n\r\n        this.DumpToLocal(updatedAlerts);\r\n    };\r\n\r\n    render() {\r\n        const { message, remainderList } = this.state;\r\n        return (\r\n            <div className=\"remainder-container\">\r\n                <div className=\"input-container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        onChange={this.text}\r\n                        className=\"input-field\"\r\n                        value={message}\r\n                    />\r\n                    <input type=\"date\" className=\"date\" onChange={this.getDate} />\r\n                    <input type=\"time\" onChange={this.getTime} className=\"date\"/>\r\n                    <button className=\"notify-btn\" type=\"button\" onClick={this.makeMessage}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            strokeWidth=\"1.5\"\r\n                            stroke=\"currentColor\"\r\n                            className=\"w-6 h-6\"\r\n                        >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                d=\"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\"\r\n                            />\r\n                        </svg>\r\n                        <div className=\"text\">Add</div>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"alerts-container\">\r\n                    {remainderList.map((each) => (\r\n                        <Alert data={each} key={each.id} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Remainder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}