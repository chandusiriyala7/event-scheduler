{"ast":null,"code":"var _jsxFileName = \"/Users/siriyalachandu/Documents/GitHub/Event-Task-Scheduler/src/component/events/index.js\";\n// import React, { Component } from \"react\";\n// import './index.css';\n// import {v4 as uuidv4} from 'uuid'\n// import Task from \"../task\";\n\n// class Event extends Component {\n//     state = {\n//         ArrayElements: [],\n//         EventText: \"\",\n//         id: uuidv4(),\n//         EventDate: null\n//     };\n\n//     makeEvent = (event) => {\n//         this.setState({ EventText: event.target.value });\n//     };\n\n//     makeDate = (event) => {\n//         this.setState({ EventDate: event.target.value });\n//     };\n\n//     AddEvent = () => {\n//         const { EventText, id, EventDate } = this.state;\n//         const newDate = new Date();\n\n//         const context = {\n//             EventText,\n//             EventDate: EventDate,\n//             newDate: newDate.toISOString(), // Convert date to string to avoid circular reference\n//             id\n//         };\n\n//         this.setState((prevState) => ({\n//             ArrayElements: [...prevState.ArrayElements, context],\n//             id: prevState.id + 1\n//         }));\n//     };\n\n//    onDelete=(id)=>{\n//     const {ArrayElements}=this.state\n//     const newArry=  ArrayElements.filter(each=>(\n//         each.id !== id \n//     ))\n//     this.setState({ArrayElements:newArry})\n\n//    }\n\n//     AddtoLocal = () => {\n//         const { ArrayElements } = this.state;\n//         localStorage.setItem(\"EventItems\", JSON.stringify(ArrayElements));\n//     };\n\n//     parsedLocalStorage = () => {\n//         return JSON.parse(localStorage.getItem('EventItems')) || [];\n//     };\n\n//     componentDidMount() {\n//         // Load data from local storage when component mounts\n//         const parsedList = this.parsedLocalStorage();\n//         this.setState({ ArrayElements: parsedList });\n//     }\n\n//     render() {\n//         const { ArrayElements } = this.state;\n\n//         return (\n//             <div className=\"event-container\">\n//                 <h1>EVENTS</h1>\n//                 <div className=\"content\">\n//                     <div className=\"context-1\">\n//                         <input type=\"text\" placeholder=\"make Event..\" onChange={this.makeEvent} />\n//                         <input type=\"date\" className=\"date\" onChange={this.makeDate} />\n//                     </div>\n//                     <br />\n//                     <div className=\"context-2\">\n//                         <button type=\"button\" className=\"btn-event\" onClick={this.AddEvent}>Add Event</button>\n//                         <button type=\"button\" className=\"btn-save\" onClick={this.AddtoLocal}>Save</button>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"content-model\">\n//                     {ArrayElements.map(each => (\n//                         <Task details={each} key={each.id}  deleteFn={this.onDelete()}/>\n//                     ))}\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Event;\n\nimport React, { Component } from \"react\";\nimport './index.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport Task from \"../task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Event extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ArrayElements: [],\n      EventText: \"\",\n      id: uuidv4(),\n      EventDate: null\n    };\n    this.makeEvent = event => {\n      this.setState({\n        EventText: event.target.value\n      });\n    };\n    this.makeDate = event => {\n      this.setState({\n        EventDate: event.target.value\n      });\n    };\n    this.AddEvent = () => {\n      const {\n        EventText,\n        EventDate\n      } = this.state;\n      const newDate = new Date();\n      const context = {\n        EventText,\n        EventDate: EventDate,\n        newDate: newDate.toISOString(),\n        // Convert date to string to avoid circular reference\n        id: uuidv4()\n      };\n      this.setState(prevState => ({\n        ArrayElements: [...prevState.ArrayElements, context],\n        EventDate: null,\n        EventText: \"\"\n      }));\n    };\n    this.onDelete = id => {\n      const {\n        ArrayElements\n      } = this.state;\n      const newArry = ArrayElements.filter(each => each.id !== id);\n      this.setState({\n        ArrayElements: newArry\n      });\n    };\n    this.AddtoLocal = () => {\n      const {\n        ArrayElements\n      } = this.state;\n      localStorage.setItem(\"EventItems\", JSON.stringify(ArrayElements));\n    };\n    this.parsedLocalStorage = () => {\n      return JSON.parse(localStorage.getItem('EventItems')) || [];\n    };\n  }\n  componentDidMount() {\n    // Load data from local storage when component mounts\n    const parsedList = this.parsedLocalStorage();\n    this.setState({\n      ArrayElements: parsedList\n    });\n  }\n  render() {\n    const {\n      ArrayElements\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"EVENTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"context-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"make Event..\",\n            onChange: this.makeEvent,\n            className: \"input-element\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"date\",\n            onChange: this.makeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"context-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-event\",\n            onClick: this.AddEvent,\n            children: \"Add Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-save\",\n            onClick: this.AddtoLocal,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-model\",\n        children: ArrayElements.map(each => /*#__PURE__*/_jsxDEV(Task, {\n          details: each,\n          deleteFn: this.onDelete\n        }, each.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Event;","map":{"version":3,"names":["React","Component","v4","uuidv4","Task","jsxDEV","_jsxDEV","Event","constructor","args","state","ArrayElements","EventText","id","EventDate","makeEvent","event","setState","target","value","makeDate","AddEvent","newDate","Date","context","toISOString","prevState","onDelete","newArry","filter","each","AddtoLocal","localStorage","setItem","JSON","stringify","parsedLocalStorage","parse","getItem","componentDidMount","parsedList","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","details","deleteFn"],"sources":["/Users/siriyalachandu/Documents/GitHub/Event-Task-Scheduler/src/component/events/index.js"],"sourcesContent":["\r\n// import React, { Component } from \"react\";\r\n// import './index.css';\r\n// import {v4 as uuidv4} from 'uuid'\r\n// import Task from \"../task\";\r\n\r\n// class Event extends Component {\r\n//     state = {\r\n//         ArrayElements: [],\r\n//         EventText: \"\",\r\n//         id: uuidv4(),\r\n//         EventDate: null\r\n//     };\r\n\r\n//     makeEvent = (event) => {\r\n//         this.setState({ EventText: event.target.value });\r\n//     };\r\n\r\n//     makeDate = (event) => {\r\n//         this.setState({ EventDate: event.target.value });\r\n//     };\r\n\r\n//     AddEvent = () => {\r\n//         const { EventText, id, EventDate } = this.state;\r\n//         const newDate = new Date();\r\n\r\n//         const context = {\r\n//             EventText,\r\n//             EventDate: EventDate,\r\n//             newDate: newDate.toISOString(), // Convert date to string to avoid circular reference\r\n//             id\r\n//         };\r\n        \r\n\r\n//         this.setState((prevState) => ({\r\n//             ArrayElements: [...prevState.ArrayElements, context],\r\n//             id: prevState.id + 1\r\n//         }));\r\n//     };\r\n\r\n//    onDelete=(id)=>{\r\n//     const {ArrayElements}=this.state\r\n//     const newArry=  ArrayElements.filter(each=>(\r\n//         each.id !== id \r\n//     ))\r\n//     this.setState({ArrayElements:newArry})\r\n\r\n//    }\r\n\r\n//     AddtoLocal = () => {\r\n//         const { ArrayElements } = this.state;\r\n//         localStorage.setItem(\"EventItems\", JSON.stringify(ArrayElements));\r\n//     };\r\n\r\n//     parsedLocalStorage = () => {\r\n//         return JSON.parse(localStorage.getItem('EventItems')) || [];\r\n//     };\r\n\r\n//     componentDidMount() {\r\n//         // Load data from local storage when component mounts\r\n//         const parsedList = this.parsedLocalStorage();\r\n//         this.setState({ ArrayElements: parsedList });\r\n//     }\r\n\r\n//     render() {\r\n//         const { ArrayElements } = this.state;\r\n\r\n//         return (\r\n//             <div className=\"event-container\">\r\n//                 <h1>EVENTS</h1>\r\n//                 <div className=\"content\">\r\n//                     <div className=\"context-1\">\r\n//                         <input type=\"text\" placeholder=\"make Event..\" onChange={this.makeEvent} />\r\n//                         <input type=\"date\" className=\"date\" onChange={this.makeDate} />\r\n//                     </div>\r\n//                     <br />\r\n//                     <div className=\"context-2\">\r\n//                         <button type=\"button\" className=\"btn-event\" onClick={this.AddEvent}>Add Event</button>\r\n//                         <button type=\"button\" className=\"btn-save\" onClick={this.AddtoLocal}>Save</button>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 <div className=\"content-model\">\r\n//                     {ArrayElements.map(each => (\r\n//                         <Task details={each} key={each.id}  deleteFn={this.onDelete()}/>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Event;\r\n\r\n\r\nimport React, { Component } from \"react\";\r\nimport './index.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Task from \"../task\";\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        ArrayElements: [],\r\n        EventText: \"\",\r\n        id: uuidv4(),\r\n        EventDate: null\r\n    };\r\n\r\n    makeEvent = (event) => {\r\n        this.setState({ EventText: event.target.value });\r\n    };\r\n\r\n    makeDate = (event) => {\r\n        this.setState({ EventDate: event.target.value });\r\n    };\r\n\r\n    AddEvent = () => {\r\n        const { EventText,  EventDate } = this.state;\r\n        const newDate = new Date();\r\n\r\n        const context = {\r\n            EventText,\r\n            EventDate: EventDate,\r\n            newDate: newDate.toISOString(), // Convert date to string to avoid circular reference\r\n            id: uuidv4()\r\n        };\r\n\r\n        this.setState((prevState) => ({\r\n            ArrayElements: [...prevState.ArrayElements, context],\r\n            EventDate: null,\r\n            EventText: \"\",\r\n        }));\r\n    };\r\n\r\n    onDelete = (id) => {\r\n        const { ArrayElements } = this.state;\r\n        const newArry = ArrayElements.filter(each => (\r\n            each.id !== id\r\n        ));\r\n        this.setState({ ArrayElements: newArry });\r\n    };\r\n\r\n    AddtoLocal = () => {\r\n        const { ArrayElements } = this.state;\r\n        localStorage.setItem(\"EventItems\", JSON.stringify(ArrayElements));\r\n    };\r\n\r\n    parsedLocalStorage = () => {\r\n        return JSON.parse(localStorage.getItem('EventItems')) || [];\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Load data from local storage when component mounts\r\n        const parsedList = this.parsedLocalStorage();\r\n        this.setState({ ArrayElements: parsedList });\r\n    }\r\n\r\n    render() {\r\n        const { ArrayElements } = this.state;\r\n\r\n        return (\r\n            <div className=\"event-container\">\r\n                <h1>EVENTS</h1>\r\n                <div className=\"content\">\r\n                    <div className=\"context-1\">\r\n                        <input type=\"text\" placeholder=\"make Event..\" onChange={this.makeEvent}  className=\"input-element\"/>\r\n                        <input type=\"date\" className=\"date\" onChange={this.makeDate}  />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"context-2\">\r\n                        <button type=\"button\" className=\"btn-event\" onClick={this.AddEvent}>Add Event</button>\r\n                        <button type=\"button\" className=\"btn-save\" onClick={this.AddtoLocal}>Save</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"content-model\">\r\n                    {ArrayElements.map(each => (\r\n                        <Task details={each} key={each.id} deleteFn={this.onDelete} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}